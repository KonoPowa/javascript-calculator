{"version":3,"sources":["components/main.js","components/github.png","App.js","serviceWorker.js","index.js"],"names":["equalsHit","decimalHit","Main","props","state","formula","display","handleClick","bind","roundAccurately","number","decimalPlaces","Number","Math","round","regex","this","i","length","setState","test","charAt","f","split","console","log","splice","join","operator","sign","newStr","slice","decimal","subtract","answer","eval","toString","event","target","id","className","onClick","href","src","github","alt","React","Component","module","exports","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4756762b.chunk.js","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\nimport github from \"./github.png\"\r\n\r\n\r\n//equalsHit tracks equal button\r\nvar equalsHit = 0\r\nvar decimalHit = 0\r\n //for my switch function\r\n\r\nclass Main extends React.Component  {\r\n//set up\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formula: \"\",\r\n      display: \"0\"\r\n    }\r\n    //this.handleClick = this.handleClick.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\ncomponentDidMount(){\r\n\r\n  const roundAccurately = (number, decimalPlaces) =>\r\n    Number(Math.round(number + \"e\" + decimalPlaces) + \"e-\" + decimalPlaces)\r\n\r\n  //MY REGEX**************************\r\n  var regex = /[x*X/+-]/\r\n\r\n  //FUNCTION FOR NUMBER BUTTONS, RESET EQUALS HIT COUNT\r\n  this.number = i => {\r\n    if(this.state.formula.length > 20 | this.state.display.length > 12){\r\n        this.setState({\r\n          formula: \"\",\r\n          display: \"LIMIT REACHED\"\r\n        })\r\n    }\r\n    else if(this.state.formula === \"0\" | equalsHit >= 1){\r\n      if(equalsHit >= 1){\r\n        equalsHit = 0\r\n      }\r\n      this.setState({\r\n        formula: i,\r\n        display: i\r\n      })\r\n    }\r\n//DONT ALLOW EXTRA ZEROES WHERE NOT ALLOWED\r\n    else if(regex.test(this.state.display.charAt(0)) | this.state.display === \"0\"){\r\n      if(this.state.display === \"0\"){\r\n        var f = this.state.formula.split(\"\")\r\n        console.log(f)\r\n         f.splice(f.length - 1, 1)\r\n         var f = f.join(\"\")\r\n        console.log(f)\r\n        this.setState({\r\n          formula:  f  + i,\r\n          display: i\r\n        })\r\n    }\r\n      else{\r\n        this.setState({\r\n          formula: this.state.formula + i,\r\n          display: i\r\n        })\r\n      }\r\n  }\r\n    else{\r\n      this.setState({\r\n        formula: this.state.formula + i,\r\n        display: this.state.display + i\r\n      })\r\n    }\r\n  }\r\n//FUNCTION FOR OPERATORS, RESET DECIMAL AND EQUALS HIT COUNT************************************\r\n\r\n  this.operator = sign => {\r\n    decimalHit = 0\r\n    if(this.state.formula.length > 25 | this.state.display.length > 15){\r\n        this.setState({\r\n          formula: \"\",\r\n          display: \"LIMIT REACHED\"\r\n        })\r\n    }\r\n    else if (equalsHit >= 1){\r\n      equalsHit = 0\r\n      this.setState({\r\n        formula: this.state.display + sign,\r\n        display: sign\r\n      })\r\n    }\r\n    else if(/[-]/.test(this.state.formula.charAt(this.state.formula.length - 1)) && regex.test(this.state.formula.charAt(this.state.formula.length - 2)) ){\r\n        var f = this.state.formula.split(\"\")\r\n         f.splice(f.length - 2, 2, sign)\r\n         var f = f.join(\"\")\r\n        this.setState({\r\n          formula: f ,\r\n        })\r\n    }\r\n    else if(regex.test(this.state.formula.charAt(this.state.formula.length - 1))){\r\n      var newStr = this.state.formula.slice(0,this.state.formula.length - 1) + sign\r\n      this.setState({\r\n        formula: newStr,\r\n        display: sign\r\n      })\r\n    }\r\n    else{\r\n      this.setState({\r\n        formula: this.state.formula + sign,\r\n        display: sign\r\n      })\r\n    }\r\n  }\r\n  //DECIMAL FUNCTION*************************************************************************\r\n\r\n  this.decimal = () =>{\r\n    if(this.state.formula.length > 25 | this.state.display.length > 15){\r\n        this.setState({\r\n          formula: \"\",\r\n          display: \"LIMIT REACHED\"\r\n        })\r\n    }\r\n    else if(regex.test(this.state.display.charAt(0))){\r\n      this.setState({\r\n        formula: this.state.formula + \"0.\",\r\n        display: \"0.\"\r\n      })\r\n    }\r\n    else if(this.state.display == 0 & this.state.formula == \"\"){\r\n      this.setState({\r\n        formula: this.state.formula + \"0.\",\r\n        display: \"0.\"\r\n      })\r\n    }\r\n    //RESET DECIMAL AND EQUALS HIT COUNT\r\n    else if(equalsHit >=1){\r\n      equalsHit = 0\r\n      this.setState({\r\n        display: \"0.\",\r\n        formula: \"0.\"\r\n      })\r\n    }\r\n      else{\r\n        this.setState({\r\n        formula: this.state.formula + \".\",\r\n        display: this.state.display + \".\"\r\n      })\r\n    }\r\n  }\r\n//NEGATIVES/SUBTRACTION BUTTON*******************************\r\n\r\n  this.subtract = () => {\r\n    if(!/[-]/.test(this.state.formula.charAt(this.state.formula.length - 1))){\r\n      decimalHit = 0\r\n      this.setState({\r\n        formula: this.state.formula + \"-\",\r\n        display: \"-\"\r\n      })\r\n    }\r\n  }\r\n  //EQUALS BUTTON FUNCTION, ROUND DECIMALS****************************************************************\r\n\r\n  this.answer = () => {\r\n    if(this.state.formula.length > 14 | this.state.display.length > 14){\r\n        this.setState({\r\n          formula: \"\",\r\n          display: \"LIMIT REACHED\"\r\n        })\r\n    }\r\n    else if(equalsHit == 0){\r\n        if(!regex.test(this.state.formula.charAt(this.state.formula.length-1))){\r\n          decimalHit = 0\r\n          equalsHit += 1\r\n          var answer = roundAccurately(eval(this.state.formula), 4).toString()\r\n          console.log(this.state.formula.length)\r\n          this.setState({\r\n            formula: this.state.formula + \"=\" + answer,\r\n            display: answer\r\n          })\r\n          return answer\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n//****************FIXES*******************************\r\n//fix negatives\r\n//fix operator at end of formula and hitting equal\r\n\r\n\r\n//SWITCH STATEMENT FOR BUTTON PRESSED, FUNCTIONS IN THE COMPONENT MOUNT ABOVE\r\n  handleClick(event){\r\n    switch(event.target.id){\r\n      case \"clear\":\r\n        decimalHit = 0\r\n        this.setState({\r\n          formula: \"\",\r\n          display: \"0\"\r\n        })\r\n        break;\r\n      case \"divide\":\r\n        this.operator(\"/\");\r\n        break;\r\n      case \"multiply\":\r\n        this.operator(\"*\");\r\n        break;\r\n      case \"add\":\r\n        this.operator(\"+\");\r\n        break;\r\n        //FIX NEGATIVES************************************\r\n      case \"subtract\":\r\n        this.subtract();\r\n        break;\r\n      case \"seven\":\r\n        this.number(\"7\");\r\n        break;\r\n      break;\r\n      case \"eight\":\r\n        this.number(\"8\");\r\n        break;\r\n      case \"nine\":\r\n        this.number(\"9\");\r\n        break;\r\n      case \"four\":\r\n        this.number(\"4\");\r\n        break;\r\n      case \"five\":\r\n        this.number(\"5\");\r\n        break;\r\n      case \"six\":\r\n        this.number(\"6\");\r\n        break;\r\n      case \"one\":\r\n        this.number(\"1\");\r\n        break;\r\n      case \"two\":\r\n        this.number(\"2\");\r\n        break;\r\n      case \"three\":\r\n        this.number(\"3\");\r\n        break;\r\n      case \"zero\":\r\n        this.number(\"0\");\r\n        break;\r\n      case \"decimal\":\r\n        decimalHit += 1\r\n        if (decimalHit <= 1){\r\n        this.decimal();\r\n      }\r\n        break;\r\n      case \"equals\":\r\n\r\n        this.answer()\r\n        break;\r\n    }\r\n  }\r\n//LOTSA CODE FOR CLICK HANDLER BECAUSE OF SWITCH STATEMENT, THANK YOU FOR YOUR PATIENCE\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  render(){\r\n  return (\r\n\r\n\r\n    <div >\r\n\r\n      <div id = \"container\">\r\n        <div id = \"calculator\">\r\n          <div id = \"formula-screen\">\r\n            {this.state.formula}\r\n          </div>\r\n          <div id = \"display\">\r\n            {this.state.display}\r\n          </div>\r\n          <div id = \"button-container\">\r\n            <div className = \"AC\" id = \"clear\" onClick = {this.handleClick}>\r\n              <div id = \"text\">AC</div>\r\n            </div>\r\n            <div className = \"buttonD operator\" id = \"divide\" onClick = {this.handleClick}>\r\n              <div id = \"text\">/</div>\r\n            </div>\r\n            <div className = \"buttonX operator\" id = \"multiply\" onClick = {this.handleClick}>\r\n              <div id = \"text\">x</div>\r\n            </div>\r\n            <div className = \"button7 number\" id = \"seven\" onClick = {this.handleClick}>\r\n              <div id = \"text\">7</div>\r\n            </div>\r\n            <div className = \"button8 number\" id = \"eight\" onClick = {this.handleClick}>\r\n              <div id = \"text\">8</div>\r\n            </div>\r\n            <div className = \"button9 number\" id = \"nine\" onClick = {this.handleClick}>\r\n              <div id = \"text\">9</div>\r\n            </div>\r\n            <div className = \"buttonS operator\" id = \"subtract\" onClick = {this.handleClick}>\r\n              <div id = \"text\">-</div>\r\n            </div>\r\n            <div className = \"button4 number\" id = \"four\" onClick = {this.handleClick}>\r\n              <div id = \"text\">4</div>\r\n            </div>\r\n            <div className = \"button5 number\" id = \"five\" onClick = {this.handleClick}>\r\n              <div id = \"text\">5</div>\r\n            </div>\r\n            <div className = \"button6 number\" id = \"six\" onClick = {this.handleClick}>\r\n              <div id = \"text\">6</div>\r\n            </div>\r\n            <div className = \"buttonP operator\" id = \"add\" onClick = {this.handleClick}>\r\n              <div id = \"text\">+</div>\r\n            </div>\r\n            <div className = \"button1 number\" id = \"one\" onClick = {this.handleClick}>\r\n              <div id = \"text\">1</div>\r\n            </div>\r\n            <div className = \"button2 number\" id = \"two\" onClick = {this.handleClick}>\r\n              <div id = \"text\">2</div>\r\n            </div>\r\n            <div className = \"button3 number\" id = \"three\" onClick = {this.handleClick}>\r\n              <div id = \"text\">3</div>\r\n            </div>\r\n            <div className = \"equals\" id = \"equals\" onClick = {this.handleClick}>\r\n              <div id = \"textEquals\">=</div>\r\n            </div>\r\n            <div className = \"button0 number\" id = \"zero\" onClick = {this.handleClick}>\r\n              <div id = \"text\">0</div>\r\n            </div>\r\n            <div className = \"buttonDD number\" id = \"decimal\" onClick = {this.handleClick}>\r\n              <div id = \"text\">.</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id = \"spacer\">\r\n        </div>\r\n        <div id = \"github\">\r\n          <a id= \"github-link\" href = \"https://github.com/KonoPowa\" target = \"_blank\">\r\n            <img src = {github} alt = \"Github\"/>\r\n          </a>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n}\r\nexport default Main;\r\n//\r\n","module.exports = __webpack_public_path__ + \"static/media/github.a9ee2a5b.png\";","import React from 'react';\nimport Main from './components/main.js'\nimport \"./assets/main.css\"\n\nfunction App() {\n  return (\n      <Main />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}